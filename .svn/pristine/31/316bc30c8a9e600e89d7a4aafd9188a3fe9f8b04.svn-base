<template>
  <div class="container">
    <header>
      <label>护理记录单</label>
      <label>姓名：廖春菊</label>
      <label>床位：0008</label>
      <label>年龄：39岁</label>
      <label>住院号：900652336</label>
      <label>性别：女</label>
      <a-tooltip placement="top">
        <template slot="title">
          <span
            >诊断：急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎</span
          >
        </template>
        <label class="brzd"
          >诊断：急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎急性胆囊炎</label
        >
      </a-tooltip>
    </header>
    <section ref="sections">
      <a-table
        :columns="columns"
        :data-source="data"
        bordered
        size="small"
        :pagination="false"
        :scroll="{ x: '100%', y: 'calc(100vh - 308px)' }"
      />
    </section>
  </div>
</template>
<script>
const columns = [
  {
    title: "时间日期",
    dataIndex: "date",
    key: "date",
    width: 260,
    scopedSlots: { customRender: "date" },
    fixed: "left",
  },
  {
    title: "体温",
    dataIndex: "tw",
    key: "tw",
    scopedSlots: { customRender: "tw" },
    width: 380,
  },
  {
    title: "心率",
    dataIndex: "xl",
    key: "xl",
    scopedSlots: { customRender: "xl" },
    width: 80,
  },
  {
    title: "脉搏",
    dataIndex: "mb",
    key: "mb",
    scopedSlots: { customRender: "mb" },
    width: 80,
  },
  {
    title: "呼吸",
    dataIndex: "hx",
    key: "hx",
    scopedSlots: { customRender: "hx" },
    width: 80,
  },
  {
    title: "血压",
    children: [
      {
        title: "收缩压",
        dataIndex: "ssy",
        key: "ssy",
        scopedSlots: { customRender: "ssy" },
        width: 80,
      },
      {
        title: "舒张压",
        dataIndex: "szy",
        key: "szy",
        scopedSlots: { customRender: "szy" },
        width: 80,
      },
    ],
  },
  {
    title: "spo2",
    dataIndex: "spo2",
    key: "spo2",
    scopedSlots: { customRender: "spo2" },
    width: 80,
  },
  {
    title: "吸氧",
    children: [
      {
        title: "吸氧流量",
        dataIndex: "xyll",
        key: "xyll",
        scopedSlots: { customRender: "xyll" },
        width: 120,
      },
      {
        title: "吸氧方式",
        dataIndex: "xyfs",
        key: "xyfs",
        scopedSlots: { customRender: "xyfs" },
        width: 120,
      },
    ],
  },
  {
    title: "意识",
    dataIndex: "ys",
    key: "ys",
    scopedSlots: { customRender: "ys" },
    width: 70,
  },
  {
    title: "瞳孔",
    children: [
      {
        title: "左",
        children: [
          {
            title: "大小(mm)",
            dataIndex: "tkzdx",
            key: "tkzdx",
            scopedSlots: { customRender: "tkzdx" },
            width: 120,
          },
          {
            title: "光反应",
            dataIndex: "tkzgfy",
            key: "tkzgfy",
            scopedSlots: { customRender: "tkzgfy" },
            width: 80,
          },
        ],
      },
      {
        title: "右",
        children: [
          {
            title: "大小(mm)",
            dataIndex: "tkydx",
            key: "tkydx",
            scopedSlots: { customRender: "tkydx" },
            width: 120,
          },
          {
            title: "光反应",
            dataIndex: "tkygfy",
            key: "tkygfy",
            scopedSlots: { customRender: "tkygfy" },
            width: 80,
          },
        ],
      },
    ],
  },
  {
    title: "是否翻身",
    dataIndex: "sffs",
    key: "sffs",
    scopedSlots: { customRender: "sffs" },
    width: 120,
  },
  {
    title: "管道",
    dataIndex: "gd",
    key: "gd",
    scopedSlots: { customRender: "gd" },
    width: 120,
  },
  {
    title: "病情观察",
    dataIndex: "bqgc",
    key: "bqgc",
    scopedSlots: { customRender: "bqgc" },
    width: 250,
  },
  {
    title: "护士签名",
    dataIndex: "hsqm",
    key: "hsqm",
    scopedSlots: { customRender: "hsqm" },
    width: 120,
  },
  {
    title: "操作",
    width: 75,
    dataIndex: "operation",
    fixed: "right",
    scopedSlots: { customRender: "operation" },
  },
];

const data = [];
for (let i = 0; i < 500; i++) {
  data.push({
    key: i,
    date: "2020-20-20 12:15",
    tw: "36.5℃",
    xl: "60",
    mb: "90",
    hx: "23" + i,
    ssy: "125",
    szy: "98",
    spo2: "36.3",
    wlje: "冰敷",
    xyll: "35",
    xyfs: "气管插管",
    ys: "暴躁老哥",
    tkzdx: "3.5",
    tkzgfy: "灵敏",
    tkydx: "3.4",
    tkygfy: "迟钝",
    sffs: i % 2 == 0 ? "是" : "否",
    gd: "胸腔引流管",
    bqgc: "病人随地大小便，已经被我当场处决",
    hsqm: "刘先近",
  });
}

export default {
  data() {
    this.cacheData = data.map((item) => ({ ...item }));
    return {
      data,
      columns,
      rowData: [
        "date",
        "tw",
        "xl",
        "mb",
        "hx",
        "ssy",
        "szy",
        "spo2",
        "wlje",
        "xyll",
        "xyfs",
        "ys",
        "tkzdx",
        "tkzgfy",
        "tkydx",
        "tkygfy",
        "sffs",
        "gd",
        "bqgc",
        "hsqm",
      ],
      editingKey: "",
      rowName: "",
      rowIndex: "",
    };
  },
  methods: {
    handleChange(value, key, column) {
      const newData = [...this.data];
      const target = newData.filter((item) => key === item.key)[0];
      if (target) {
        target[column] = value;
        this.data = newData;
      }
    },

    editSelect(key, column) {
      this.rowIndex = key;
      this.rowName = column;
    },
    handleChangeSelect(value) {
      var key = this.rowIndex;
      var column = this.rowName;
      const newData = [...this.data];
      const target = newData.filter((item) => key === item.key)[0];
      if (target) {
        target[column] = value.toString();
        this.data = newData;
      }
    },
    handleChangeDate(date, dateString) {
      var key = this.rowIndex;
      var column = this.rowName;
      const newData = [...this.data];
      const target = newData.filter((item) => key === item.key)[0];
      if (target) {
        target[column] = dateString.toString();
        this.data = newData;
      }
    },
    edit(key) {
      const newData = [...this.data];
      const target = newData.filter((item) => key === item.key)[0];
      this.editingKey = key;
      if (target) {
        target.editable = true;
        this.data = newData;
      }
    },

    save(key) {
      const newData = [...this.data];
      const newCacheData = [...this.cacheData];
      const target = newData.filter((item) => key === item.key)[0];
      const targetCache = newCacheData.filter((item) => key === item.key)[0];
      if (target && targetCache) {
        delete target.editable;
        this.data = newData;
        Object.assign(targetCache, target);
        this.cacheData = newCacheData;
      }
      this.editingKey = "";
    },
  },
};
</script>
<style scoped>
.container {
  height: 100%;
  width: 100%;
}
.container header {
  height: 50px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #fafafa;
  padding: 0 20px;
}
.container section {
  height: calc(100% - 50px);
}
.brzd {
  display: inline-block;
  width: 300px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.container section >>> .ant-table-tbody > tr > td {
  padding: 0 5px !important;
  overflow-wrap: break-word;
  height: 40px;
}
.container section >>> .ant-table-thead > tr > th {
  background: #fafafa !important;
}
.container section >>> .ant-table-small > .ant-table-content .ant-table-header {
  background-color: #fafafa;
}
</style>