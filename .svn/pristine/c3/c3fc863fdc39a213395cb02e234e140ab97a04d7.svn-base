<template>
  <div class="container" :style="[{pointerEvents:($store.state.isjj==true?'auto':'none')}]">
    <a-form-model :model="form" :label-col="labelCol" :wrapper-col="wrapperCol">
      <div class="tops">
        <div class="tops-left">
          <a-icon type="user-add" style="color: cornflowerblue" />
        </div>
        <div class="tops-item" v-if="isEdit">
          <ul>
            <li>
              <span>{{ form.bedNumber }}</span>
              <span style="margin-left: 20px">
                <br-icon ref="mychild"></br-icon>
              </span>
            </li>
            <li style="justify-content: space-between">
              <span>
                <span>{{ form.brxb }}</span>
                <span style="margin-left: 20px">{{ form.patientName }}</span>
              </span>
              <a-tooltip placement="left">
                <template slot="title">
                  <span>增加到白板显示</span>
                </template>
                <a-switch default-checked v-model="form.whiteboardDisplay"/>
              </a-tooltip>
            </li>
          </ul>
        </div>
        <div class="tops-item tops-item-last" @click="xzhzAll(1,7,'')" v-else>
          <a-button>选择患者</a-button>
        </div>
      </div>
      <a-form-model-item label="出院诊断">
        <a-input v-model="form.diagnosis" />
      </a-form-model-item>
       <a-form-model-item label="出院时间">
        <a-date-picker
          v-model="form.dischargeTime"
          :format="dateFormat"
          show-time
          @change="(i,v)=>dataChanges(i,v,'dischargeTime')"
        />
      </a-form-model-item>
      <a-form-model-item label="转科时间">
        <a-date-picker
          v-model="form.transferTime"
          :format="dateFormat"
          show-time
         @change="(i,v)=>dataChanges(i,v,'transferTime')"
        />
      </a-form-model-item>
      <a-form-model-item label="死亡时间">
        <a-date-picker
          v-model="form.timeOfDeath"
          :format="dateFormat"
          show-time
          @change="(i,v)=>dataChanges(i,v,'timeOfDeath')"
        />
      </a-form-model-item>
      <a-form-model-item label="转往科室">
        <a-select 
        v-model="form.transferInDepartmentId" 
        show-search 
        option-filter-prop="children"
        :filter-option="filterOption"
        >
          <a-select-option v-for="ks in Administrative" :key="ks.code">
            {{ ks.fullName}}
          </a-select-option>
        </a-select>
      </a-form-model-item>
    </a-form-model>
  </div>
</template>
<script>
import brIcon from "./brIcon";
import { post, get, potdelete}from '../../../../request/request';
import obj from "../../../../../static/js/jjbEdit";
export default {
  data() {
    return {
      dateFormat: "YYYY-MM-DD HH:mm",
      labelCol: { span: 5 },
      wrapperCol: { span: 19 },
      Administrative:null,
      form: {
        type: "hlShioverDischargedPatientDtos",
        title: "出院患者",
        id: null,
        tmh: null,
        zyh: null,
        brxb:null,
        orderOfClassesId:localStorage.orderOfClassesId,
        handoverTime: localStorage.handoverTime,
        confirmTheShiftTime:null,
        succeedTime:null,
        isHandover: false,
        isSucceed: false,
        bedNumber: null,
        patientName: null,
        diagnosis: null,
        dischargeTime: null,
        transferTime: null,
        timeOfDeath: null,
        transferInDepartmentId: null,
        transferInDepartmentName: null,
        whiteboardDisplay: false,
        whetherToGenerate: false,
        idBeforeGeneration: null,
      }
    };
  },
  props: obj.props,
  watch: obj.watch,
  mounted() {
    if(this.isEdit) {
      this.form = JSON.parse(JSON.stringify(this.editRowData));
    }
  },
  methods: {
    onSubmit() {
      this.$emit("ruquestData", this.form);
    },
    dataChanges(i, v, r) {
      this.form[r] = v;
    },
    //7.8胖纸
    xzhzAll(type,dataType,zyh){
      this.$emit('openxrbr',type,dataType,zyh);
    },
    esdd(val){
      this.$refs.mychild.parentHandleclick(val);
    },
    async getAdministrative(){
      var obj={
          key: "ksinfo"
      }
      const res = await post("/han/DICT/GetDict",obj)
      console.log(res)
      if(res.result){
        this.Administrative = res.result;
      }else{
        this.$message.error(res.msg)
      }
    },
    filterOption(input, option) {
      return (
        option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0
      );
    },
  },
  created(){
    this.getAdministrative();
  },
  components: {
    brIcon,
  }
};
</script>
<style scoped>
@import url("../../../../../static/css/jjbModel.css");
</style>
