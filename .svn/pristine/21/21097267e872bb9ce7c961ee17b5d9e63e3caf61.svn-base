<template>
  <div>
    <section class="item-config">
      <a-spin :spinning="spinning" size="large">
        <div>
          <template v-if="brxxData != null">
            <vue-seamless-scroll
              :data="brxxData"
              :class-option="classOption"
              class="seamless-warp"
            >
            <div v-for="(item, index) in sshz" :key="index" class="shp1">
               <div class="top"><img :src="item.brxb=='男'?boytx:girltx" width="65px" alt=""></div>
               <div class="middle">
                   <h3>
                       <span>{{item.brxm}}</span>&nbsp;&nbsp;
                       <span>{{item.brxb}}</span>&nbsp;&nbsp;
                       <span>{{item.brnl}}</span>&nbsp;&nbsp;
                       <span>{{item.bcmc}}床</span>
                   </h3>
                   <div>
                       <span class="ssname">手术名称：{{item.ssmc}}</span>
                   </div>
                   <div>
                       麻醉方式：<span>{{item.mzfs}}</span>
                   </div>
                   <div>
                       术前准备：<span>{{item.sqzb}}</span>
                   </div>
               </div>
               <div class="time">
                   <p>{{item.nssrq}}</p>
               </div>
            </div>
            </vue-seamless-scroll>
          </template>
        </div>
      </a-spin>
    </section>
  </div>
</template>
<script>
import vueSeamlessScroll from "vue-seamless-scroll";
import { post, get } from "../../../request/request";
import { get1 } from "../../../request/request1";

export default {
  name: "nursingBoard",
  data() {
    return {
      checckTemplate: null, //当前点击的模块对应的数组
      isSpin: true, //刷新图标动起来
      isCarousel: true, //是否展示轮播
      brxxData: null,
      spinning: true,

      // 新加
      boytx: "../../../../static/images/Board/man.png",
      girltx: "../../../../static/images/Board/wuman.png",
    };
  },
  components: {
    vueSeamlessScroll,
  },
  props:{
    sshz:{},
  },
  computed: {
    classOption() {
      return {
        step: 0.5, // 数值越大速度滚动越快
        limitMoveNum: this.sshz.length, // 开始无缝滚动的数据量 this.dataList.length
        hoverStop: true, // 是否开启鼠标悬停stop
        direction: 1, // 0向下 1向上 2向左 3向右
        openWatch: true, // 开启数据实时监控刷新dom
        singleHeight: 0, // 单步运动停止的高度(默认值0是无缝不停止的滚动) direction => 0/1
        singleWidth: 0, // 单步运动停止的宽度(默认值0是无缝不停止的滚动) direction => 2/3
        waitTime: 200, // 单步运动停止的时间(默认值1000ms)
      };
    },
  },
  methods: {
    ycxm(str, frontLen, endLen) {
      //隐藏关键信息 frontLen: 前面需要保留几位    endLen: 后面需要保留几位
      var len = str.length - frontLen - endLen;
      var xing = "";
      for (var i = 0; i < len; i++) {
        xing += "*";
      }
      return (
        str.substring(0, frontLen) + xing + str.substring(str.length - endLen)
      );
    },
    getDataAll() {
      // console.log(this.sshz);
      this.isSpin = true;
      this.spinning = true;
      // const res1 = await get1("/han/HandoverProc/GetMarkPatients");
      if (this.sshz) {
        this.isSpin = !this.isSpin;
        this.spinning = !this.spinning;
        this.brxxData = this.sshz;
        // console.log(this.brxxData);
      }
    },
  },
  watch: {
    sshz() {
      this.getDataAll();
    }
  },
  mounted() {
    this.getDataAll();
  },
};
</script>

<style  scoped>
.item-config{
    height: 380px;
    overflow: hidden;
    margin-top: 10px;
}
.shp1{
    /* border:1px solid red; */
    /* height: 1rem; */
    display: flex;
    justify-content:space-between;
    padding: 10px;
}
.top{
    flex: 1;
    text-align: center;
}
.top>img{
    margin-top: 10%;
}
.middle{
    flex: 3;
    /* overflow: auto; */
}
.time{
    flex: 1;
    text-align: center;
    font-size: 12px;
}
/* .shp1>div{
    border:1px solid red;

} */
.ssname{
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 95%;
    display: inline-block;
}
</style>
