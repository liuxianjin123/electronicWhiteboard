<template>
  <div class="box">
    <header>
      <div class="heads">
        <span>
          {{ dataType }}
        </span>
        <ul class="itemBox">
          <template>
            <li
              class="topDataItem"
              v-for="(item, index) in topDataList"
              :key="index"
              :style="{
                border:
                  dataType == '全科'
                    ? '2px dotted #f59a23'
                    : '2px dotted #1e9fff',
              }"
            >
              <p>
                <span>{{ item.name }}</span>
              </p>
              <p>{{ item.num }}人</p>
            </li>
          </template>
        </ul>
      </div>
    </header>
    <section>
      <div class="tableBox">
        <ul>
          <li v-for="(item, index) in showItem" :key="index">
            <div class="titles">
              <div>
                <i></i>
                <span
                  ><b>{{ item.title }}</b></span
                >
              </div>
              <div>
                <a-button type="link" :data-type="item.name">
                  查看全部
                </a-button>
                <a-button
                  type="danger"
                  style="background: orange; border-color: orange"
                  :data-type="item.name"
                  @click="addRowData(item.name, item.title)"
                >
                  增加{{ item.title }}
                </a-button>
                <a-button
                  type="primary"
                  :data-type="item.name"
                  :disabled="!isColumns(item.columns).isCheck()"
                >
                  批量交接</a-button
                >
              </div>
            </div>
            <template>
              <a-table
                :columns="isColumns(item.columns).column"
                :data-source="isColumns(item.columns).datas"
                @change="onChange"
                bordered
                :customRow="rowClick"
                size="small"
                :scroll="{ x: '100%' }"
                :rowKey="
                  (record, index) => {
                    return index;
                  }
                "
                :row-selection="{
                  selectedRowKeys: isColumns(item.columns).selectA,
                  onChange: isColumns(item.columns).selectChange,
                  columnWidth: 40,
                }"
              >
                <span slot="assessScoreLower" slot-scope="text, record">
                  {{ record.ssy }}/{{ record.szy }}
                </span>
                <template slot="address" slot-scope="text, record, index">
                  <a
                    @click.stop="editThis($event)"
                    :data-index="index"
                    :data-type="item.name"
                    ><a-icon type="interaction" /> 交班</a
                  >
                  <a-divider type="vertical" />
                  <a
                    style="color: red"
                    @click.stop="delThis($event)"
                    :data-index="index"
                    :data-type="item.name"
                    ><a-icon type="delete" theme="filled" /> 刪除</a
                  >
                </template>
              </a-table>
            </template>
          </li>
        </ul>
      </div>
    </section>
    <a-drawer
      :title="!isEdit ? '新增' + editItemText : '编辑' + editItemText"
      placement="right"
      :closable="false"
      :visible="drawerVisible"
      @close="onDrawerClose"
      :width="450"
      style="height: 100%"
    >
      <div
        style="height: calc(100% - 60px); overflow-y: auto; overflow-x: hidden"
      >
        <xrbr-form
          v-if="editItem == 'xrhz'"
          @childrenSubmitdata="childrenSubmitdata"
          :isEdit="isEdit"
          :editRowData="editRowData"
          ref="xrhz"
        ></xrbr-form>
        <cybr-form v-if="editItem == 'cyhz'"></cybr-form>
        <ssbr-form v-if="editItem == 'sshz'"></ssbr-form>
        <bwbr-form v-if="editItem == 'bwhz'"></bwbr-form>
        <bzbr-form v-if="editItem == 'bzhz'"></bzbr-form>
        <tsbr-form v-if="editItem == 'tshz'"></tsbr-form>
      </div>
      <div style="height: 60px; line-height: 60px; text-align: center">
        <a-button type="primary" @click="mounitChildrenData">确认</a-button>
        <a-button type="danger" ghost @click="drawerVisible = false"
          >取消</a-button
        >
      </div>
    </a-drawer>
  </div>
</template>
<script>
import xrbrForm from "../../views/ChangeShifts/jjbModel/xrbrForm";
import cybrForm from "../../views/ChangeShifts/jjbModel/cybrForm";
import ssbrForm from "../../views/ChangeShifts/jjbModel/ssbrForm";
import bwbrForm from "../../views/ChangeShifts/jjbModel/bwbrForm";
import bzbrForm from "../../views/ChangeShifts/jjbModel/bzbrForm";
import tsbrForm from "../../views/ChangeShifts/jjbModel/tsbrForm";
const colxrhz = [
  {
    title: "床号",
    dataIndex: "bch",
    sorter: (a, b) => a.bch.length - b.bch.length,
    width: "70px",
  },
  {
    title: "姓名",
    dataIndex: "name",
    width: "70px",
  },
  {
    title: "入院诊断",
    dataIndex: "zyzd",
    width: "270px",
  },
  {
    title: "时间",
    children: [
      {
        title: "新入",
        dataIndex: "xrsj",
        width: 100,
      },
      {
        title: "转入",
        dataIndex: "zrsj",
        width: 100,
      },
    ],
  },
  {
    title: "入院方式",
    dataIndex: "ryfs",
    width: "50px",
  },
  {
    title: "护理级别",
    dataIndex: "hljb",
    width: "80px",
  },
  {
    title: "T(℃)",
    dataIndex: "tw",
    width: "60px",
  },
  {
    title: "P(次分)",
    dataIndex: "mb",
    width: "70px",
  },
  {
    title: "R(次分)",
    dataIndex: "hx",
    width: "70px",
  },
  {
    title: "BP(mmHg)",
    width: "120px",
    scopedSlots: { customRender: "assessScoreLower" },
  },
  {
    title: "观察要点",
    dataIndex: "gcyd",
    width: "150px",
  },
  {
    title: "上夜病情",
    dataIndex: "sybq",
    width: "150px",
  },
  {
    title: "下夜病情",
    dataIndex: "xybq",
    width: "150px",
  },
  {
    title: "操作",
    width: "140px",

    scopedSlots: { customRender: "address" },
  },
];
const colcyhz = [
  {
    title: "床号",
    dataIndex: "bch",
    sorter: (a, b) => a.bch.length - b.bch.length,
    width: "70px",
  },
  {
    title: "姓名",
    dataIndex: "name",
    width: "70px",
  },
  {
    title: "出院诊断",
    dataIndex: "cyzd",
    width: 450,
  },
  {
    title: "时间",
    children: [
      {
        title: "出院",
        dataIndex: "cysj",
        width: 150,
      },
      {
        title: "转科",
        dataIndex: "zksj",
        width: 140,
      },
      {
        title: "死亡",
        dataIndex: "swsj",
        width: 140,
      },
    ],
  },
  {
    title: "转往科室",
    dataIndex: "zwks",
    width: 140,
  },
  {
    title: "操作",
    width: "150px",
    scopedSlots: { customRender: "address" },
  },
];
const colbzhz = [
  {
    title: "床号",
    dataIndex: "bch",
    sorter: (a, b) => a.bch.length - b.bch.length,
    width: "70px",
  },
  {
    title: "姓名",
    dataIndex: "name",
    width: "70px",
  },
  {
    title: "T(℃)",
    dataIndex: "tw",
    width: "60px",
  },
  {
    title: "P(次分)",
    dataIndex: "mb",
    width: "70px",
  },
  {
    title: "R(次分)",
    dataIndex: "hx",
    width: "70px",
  },
  {
    title: "BP(mmHg)",
    width: "120px",
    scopedSlots: { customRender: "assessScoreLower" },
  },
  {
    title: "主要诊断",
    dataIndex: "zyzd",
  },
  {
    title: "操作",
    width: "150px",
    scopedSlots: { customRender: "address" },
  },
];
const colbwhz = [
  {
    title: "床号",
    dataIndex: "bch",
    sorter: (a, b) => a.bch.length - b.bch.length,
    width: "70px",
  },
  {
    title: "姓名",
    dataIndex: "name",
    width: "70px",
  },
  {
    title: "T(℃)",
    dataIndex: "tw",
    width: "60px",
  },
  {
    title: "P(次分)",
    dataIndex: "mb",
    width: "70px",
  },
  {
    title: "R(次分)",
    dataIndex: "hx",
    width: "70px",
  },
  {
    title: "BP(mmHg)",
    width: "120px",
    scopedSlots: { customRender: "assessScoreLower" },
  },
  {
    title: "主要诊断",
    dataIndex: "zyzd",
  },
  {
    title: "操作",
    width: "150px",
    scopedSlots: { customRender: "address" },
  },
];
const coltshz = [
  {
    title: "床号",
    dataIndex: "bch",
    sorter: (a, b) => a.bch.length - b.bch.length,
    width: "70px",
  },
  {
    title: "姓名",
    dataIndex: "name",
    width: "70px",
  },
  {
    title: "T(℃)",
    dataIndex: "tw",
    width: "60px",
  },
  {
    title: "P(次分)",
    dataIndex: "mb",
    width: "70px",
  },
  {
    title: "R(次分)",
    dataIndex: "hx",
    width: "70px",
  },
  {
    title: "BP(mmHg)",
    width: "120px",
    scopedSlots: { customRender: "assessScoreLower" },
  },
  {
    title: "主要诊断",
    dataIndex: "zyzd",
  },
  {
    title: "护理级别",
    dataIndex: "hljb",
  },
  {
    title: "日间病情变化/护理措施",
    dataIndex: "rjbqbh",
  },
  {
    title: "上夜病情变化/护理措施",
    dataIndex: "sybqbh",
  },
  {
    title: "下夜病情变化/护理措施",
    dataIndex: "xybqbh",
  },
  {
    title: "操作",
    width: "150px",
    scopedSlots: { customRender: "address" },
  },
];
const colsshz = [
  {
    title: "床号",
    dataIndex: "bch",
    sorter: (a, b) => a.bch.length - b.bch.length,
    width: "70px",
  },
  {
    title: "姓名",
    dataIndex: "name",
    width: "70px",
  },
  {
    title: "T(℃)",
    dataIndex: "tw",
    width: "60px",
  },
  {
    title: "P(次分)",
    dataIndex: "mb",
    width: "70px",
  },
  {
    title: "R(次分)",
    dataIndex: "hx",
    width: "70px",
  },
  {
    title: "BP(mmHg)",
    width: "90px",
    scopedSlots: { customRender: "assessScoreLower" },
  },
  {
    title: "主要诊断",
    dataIndex: "zyzd",
    width: "120px",
  },
  {
    title: "手术名称",
    dataIndex: "ssmc",
    width: "120px",
  },
  {
    title: "时间",
    children: [
      {
        title: "手术/分娩",
        dataIndex: "sssj",
        width: 100,
      },
      {
        title: "送回病房",
        dataIndex: "shbgsj",
        width: 100,
      },
    ],
  },
  {
    title: "麻醉方式",
    dataIndex: "mzfs",
    width: "120px",
  },
  {
    title: "班次",
    dataIndex: "bc",
    width: "70px",
  },
  {
    title: "观察要点",
    children: [
      {
        title: "切口敷料",
        dataIndex: "qkfl",
        width: 70,
      },
      {
        title: "引流",
        children: [
          {
            title: "ml",
            dataIndex: "yll",
            width: 70,
          },
          {
            title: "性状",
            dataIndex: "yllxt",
            width: 70,
          },
        ],
      },
      {
        title: "胃肠减压",
        children: [
          {
            title: "ml",
            dataIndex: "wcjy",
            width: 70,
          },
          {
            title: "性状",
            dataIndex: "wcjyxt",
            width: 70,
          },
        ],
      },
      {
        title: "小便(ml)",
        dataIndex: "xb",
        width: 70,
      },
      {
        title: "其他",
        dataIndex: "qt",
        width: 170,
      },
    ],
  },
  {
    title: "操作",
    width: "150px",
    scopedSlots: { customRender: "address" },
  },
];
const xrhz = [
  {
    type: "xrhz",
    title: "新入患者",
    bch: "0001床",
    name: "John Brown",
    xb: "男",
    tjbb: [],
    zyzd: "病人鸡鸡被咬伤",
    xrsj: "2020-02-20 15:35",
    zrsj: "2020-02-20 15:36",
    ryfs: "步行",
    hljb: "一级护理",
    tw: "36.8",
    mb: "35",
    hx: "65",
    ssy: "125",
    szy: "98",
    gcyd: "患者右手边的小拇指上的指甲盖左边有点黑",
    sybq: "患者起来上厕所了",
    xybq: "患者上完厕所了"
  },
  {
    type: "xrhz",
    title: "新入患者",
    bch: "0002床",
    name: "刘先近",
    xb: "女",
    tjbb: ['1'],
    zyzd: "病人鸡鸡被刘鹏咬伤",
    xrsj: "2020-02-21 15:35",
    zrsj: "2020-02-21 15:36",
    ryfs: "飞行",
    hljb: "十级护理",
    tw: "37.8",
    mb: "99",
    hx: "25",
    ssy: "225",
    szy: "338",
    gcyd: "刘鹏患者右手边的小拇指上的指甲盖左边有点黑",
    sybq: "刘鹏患者起来上厕所了",
    xybq: "刘鹏患者上完厕所了"
  },
];
const cyhz = [
  {
    type: "cyhz",
    title: "出院患者",
    bch: "0001床",
    name: "John Brown",
    cyzd: "病人鸡鸡被咬伤",
    cysj: "2020-02-20 15:35",
    zksj: "2020-02-20 15:36",
    swsj: "2020-02-20 15:36",
    zwks: "很惊雷嫩",
  },
];
const bzhz = [
  {
    type: "bzhz",
    title: "病重患者",
    bch: "0001床",
    name: "John Brown",
    zyzd: "病人鸡鸡被咬伤",
    tw: "36.8",
    mb: "35",
    hx: "65",
    ssy: "125",
    szy: "98",
  },
];
const bwhz = [
  {
    type: "bwhz",
    title: "病危患者",
    bch: "0001床",
    name: "John Brown",
    zyzd: "病人鸡鸡被咬伤",
    tw: "36.8",
    mb: "35",
    hx: "65",
    ssy: "125",
    szy: "98",
  },
];
const tshz = [
  {
    type: "tshz",
    title: "特殊患者",
    bch: "0001床",
    name: "John Brown",
    zyzd: "病人鸡鸡被咬伤",
    tw: "36.8",
    mb: "35",
    hx: "65",
    ssy: "125",
    szy: "98",
    hljb: "特级",
    rjbqbh: "一般",
    sybqbh: "良好",
    xybqbh: "极差",
  },
];
const sshz = [
  {
    type: "sshz",
    title: "手术患者",
    bch: "0001床",
    name: "John Brown",
    zyzd: "病人鸡鸡被咬伤",
    tw: "36.8",
    mb: "35",
    hx: "65",
    ssy: "125",
    szy: "98",
    ssmc: "狗鸡儿切除术",
    sssj: "2020-20-20 20:20",
    shbfsj: "2020-20-20 20:20",
    mzfs: "静脉置管麻醉",
    bc: "白板",
    qkfl: "yes",
    yll: "55",
    yllxt: "恶心",
    wcjy: "250",
    ycjyxt: "好得很",
    xb: "250",
    qt: "病人术后暂无不良反应",
  },
];
function onChange(pagination, filters, sorter) {
  console.log("params", pagination, filters, sorter);
}
export default {
  name: "nexreJb",
  data() {
    let topDataList = [
      //顶部数据的集合
      { name: "病人总数", num: "456" },
      { name: "新入患者", num: "2" },
      { name: "转入", num: "3" },
      { name: "出院", num: "4" },
      { name: "转出", num: "4556" },
      { name: "死亡", num: "6456" },
      { name: "一级护理", num: "4567" },
      { name: "手术", num: "8" },
      { name: "分娩", num: "4956" },
      { name: "病重", num: "3" },
      { name: "病危", num: "1" },
      { name: "特殊", num: "4526" },
    ];
    let showItem = [
      //读取过来护士选中那些项目需要展示
      { name: "xrhz", columns: "colxrhz", title: "新入患者" },
      { name: "cyhz", columns: "colcyhz", title: "出院患者" },
      // { name: "zrhz", columns: "colzrhz", title: "转入患者" },
      // { name: "zchz",columns:'colzchz',title:'转出患者'},
      // { name: "swhz",columns:'colswhz',title:'死亡患者'},
      // { name: "yjhl",columns:'colyjhl',title:'一级护理'},
      { name: "sshz", columns: "colsshz", title: "手术患者" },
      // { name: "fmhz",columns:'colfmhz',title:'分娩患者'},
      { name: "bwhz", columns: "colbwhz", title: "病危患者" },
      { name: "bzhz", columns: "colbzhz", title: "病重患者" },
      { name: "tshz", columns: "coltshz", title: "特殊患者" },
    ];
    return {
      drawerVisible: false, //抽屉显示与隐藏
      topDataList, //顶部显示的所有项目数据
      showItem, //护士选择了那些项目需要显示
      xrhz, //table对应的数据源JSON
      isEdit: false, //判断点击的新增按钮还是点击的tr编辑
      editItem: null, //编辑或者新增的哪一个项目，新入，病危，病重。。。
      editItemText: null, //
      editIndex: null, //编辑了数据的哪一条数据
      editRowData: null, //编辑哪一行数据具体内容
      cyhz,
      bzhz,
      bwhz,
      tshz,
      sshz,
      colxrhz, //table对应的数据表头JSON
      colcyhz,
      colbzhz,
      colbwhz,
      coltshz,
      colsshz,
      visible: false,
      title1: "白班",
      title2: "夜班",
      dataType: "全科",
      xrhzRowKeys: [], //各个表格复选框对应的复选框选中的数据
      cyhzRowKeys: [],
      bzhzRowKeys: [],
      bwhzRowKeys: [],
      tshzRowKeys: [],
      sshzRowKeys: [],
    };
  },
  methods: {
    onChange, //表格的复选框监听
    addRowData(i, y) {
      //新增某某项目时方法
      this.isEdit = false; //表示新增
      this.editItem = i;
      this.editItemText = y;
      this.drawerVisible = true;
    },
    onDrawerClose() {
      this.drawerVisible = !this.drawerVisible;
    },
    rowClick(record, index) {
      //点击编辑行时方法
      return {
        on: {
          // 鼠标单击行
          click: (event) => {
            this.drawerVisible = true;
            this.isEdit = true; //表示新增
            this.editItem = record.type;
            this.editItemText = record.title;
            this.editIndex=index;
            this.editRowData = record;
            this.drawerVisible = true;
          },
        },
      };
    },
    mounitChildrenData(){
      var _thisEdit =this.editItem;
      this.$refs.xrhz.onSubmit();
    },
    childrenSubmitdata(value) {},
    isColumns(i) {
      //判断分组名，返回对应的表头
      var str = null;
      var dataList = null;
      var selectAyy = null;
      var selectChange = null;
      var isCheck = null;
      switch (i) {
        case "colxrhz":
          str = this.colxrhz;
          dataList = this.xrhz;
          selectAyy = this.xrhzRowKeys;
          selectChange = this.xrhzChange;
          isCheck = this.hasxrhz;
          break;
        case "colcyhz":
          str = this.colcyhz;
          dataList = this.cyhz;
          selectAyy = this.cyhzRowKeys;
          selectChange = this.cyhzChange;
          isCheck = this.hascyhz;
          break;
        case "colbzhz":
          str = this.colbzhz;
          dataList = this.bzhz;
          selectAyy = this.bzhzRowKeys;
          selectChange = this.bzhzChange;
          isCheck = this.hasbzhz;
          break;
        case "colbwhz":
          str = this.colbwhz;
          dataList = this.bwhz;
          selectAyy = this.bwhzRowKeys;
          selectChange = this.bwhzChange;
          isCheck = this.hasbwhz;
          break;
        case "coltshz":
          str = this.coltshz;
          dataList = this.tshz;
          selectAyy = this.tshzRowKeys;
          selectChange = this.tshzChange;
          isCheck = this.hastshz;
          break;
        case "colsshz":
          str = this.colsshz;
          dataList = this.sshz;
          selectAyy = this.sshzRowKeys;
          selectChange = this.sshzChange;
          isCheck = this.hassshz;
          break;
        default:
          break;
      }
      return {
        column: str,
        datas: dataList,
        selectA: selectAyy,
        selectChange: selectChange,
        isCheck: isCheck,
      };
    },
    hasxrhz() {
      return this.xrhzRowKeys.length > 0;
    },
    hascyhz() {
      return this.cyhzRowKeys.length > 0;
    },
    hasbzhz() {
      return this.bzhzRowKeys.length > 0;
    },
    hasbwhz() {
      return this.bwhzRowKeys.length > 0;
    },
    hastshz() {
      return this.tshzRowKeys.length > 0;
    },
    hassshz() {
      return this.sshzRowKeys.length > 0;
    },
    xrhzChange(selectedRowKeys, selectedRows) {
      console.log("selectedRowKeys changed: ", selectedRowKeys, selectedRows);
      this.xrhzRowKeys = selectedRowKeys;
    },
    cyhzChange(selectedRowKeys, selectedRows) {
      console.log("selectedRowKeys changed: ", selectedRowKeys, selectedRows);
      this.cyhzRowKeys = selectedRowKeys;
    },
    bzhzChange(selectedRowKeys, selectedRows) {
      console.log("selectedRowKeys changed: ", selectedRowKeys, selectedRows);
      this.bzhzRowKeys = selectedRowKeys;
    },
    bwhzChange(selectedRowKeys, selectedRows) {
      console.log("selectedRowKeys changed: ", selectedRowKeys, selectedRows);
      this.bwhzRowKeys = selectedRowKeys;
    },
    tshzChange(selectedRowKeys, selectedRows) {
      console.log("selectedRowKeys changed: ", selectedRowKeys, selectedRows);
      this.tshzRowKeys = selectedRowKeys;
    },
    sshzChange(selectedRowKeys, selectedRows) {
      console.log("selectedRowKeys changed: ", selectedRowKeys, selectedRows);
      this.sshzRowKeys = selectedRowKeys;
    },
  },
  components: {
    xrbrForm,
    cybrForm,
    ssbrForm,
    bwbrForm,
    bzbrForm,
    tsbrForm,
  },
};
</script>
<style scoped>
ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.box {
  height: 100%;
  border-radius: 5px;
}
.box header {
  background: #fff;
  padding: 10px;
  border-radius: 0 0 7px 7px;
}
.box section {
  height: calc(100% - 91px);
  margin-top: 12px;
  border-radius: 7px;
  background: #fff;
  padding: 10px;
}
.box section .tableBox {
  height: 100%;
  overflow-y: auto;
}
.ant-tabs-tab > span {
  font-size: 15px;
  font-weight: bold;
}
.heads {
  display: flex;
  align-items: center;
  text-align: center;
}
.heads > span {
  width: 40px;
  font-size: 17px;
  font-weight: bold;
}
.itemBox {
  flex: 1;
  display: flex;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}
.itemBox li {
  width: 90px;
  height: 60px;
  text-align: center;
  border-radius: 5px;
}
.itemBox li p:first-child {
  margin-top: -12px;
}
.itemBox li p:first-child span {
  background: #fff;
}
.itemBox li p:last-child {
  margin-top: -5px;
  font-size: 15px;
}
.titles {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 15px;
}
.titles div:first-child i {
  display: inline-block;
  width: 5px;
  height: 28px;
  background: orange;
  vertical-align: middle;
  border-radius: 3px;
}
section >>> .ant-table-thead > tr > th {
  background: #eaf0f6 !important;
  color: #196d9d !important;
  font-weight: bold;
}
section >>> .ant-table-small > .ant-table-content > .ant-table-body {
  margin: 0;
}
</style>
