<template>
  <div class="container">
    <a-form-model ref="ruleForm" :model="ruleForm" :rules="rules" class="forms">
      <div class="titles">
        <h2>互慧护理综合管理平台</h2>
        <h3>HuHui Nursing comprehensive management platform</h3>
      </div>
      <a-form-model-item has-feedback label="" prop="user">
        <a-input
          v-model="ruleForm.Account"
          type="text"
          autocomplete="off"
          size="large"
        >
          <a-icon slot="prefix" type="user" />
        </a-input>
      </a-form-model-item>
      <a-form-model-item has-feedback label="" prop="pwd">
        <a-input
          v-model="ruleForm.Password"
          :type="password"
          autocomplete="off"
          size="large"
        >
          <a-icon slot="prefix" type="lock" />copied
          <a-tooltip slot="suffix" title="查看密码" @click="toogleType">
            <a-icon type="aliwangwang" style="color: rgba(0, 0, 0, 0.45)" />
          </a-tooltip>
        </a-input>
      </a-form-model-item>
      <a-form-model-item :wrapper-col="{ span: 24 }">
        <a-button type="primary" @click="submitForm('ruleForm')" block style="height:40px">
          <a-icon :type="loads" />Submit
        </a-button>
      </a-form-model-item>
      <a href="javascript:;" class="bg">CopyRight©2021 四川互慧软件有限公司,All CopyRights Reserved</a>
    </a-form-model>
  </div>
</template>
<script>
import { post, get }from '../../request/request';
export default {
  data() {
    let users = (rule, value, callback) => {
      if (value === "") {
        callback(new Error("请输入用户名"));
      } else {
        callback();
      }
    };
    let pwds = (rule, value, callback) => {
      if (value === "") {
        callback(new Error("请输入密码"));
      } else {
        callback();
      }
    };
    return {
      loads: "login",
      password: "password",
      ruleForm: {
        Account: "0225",
        Password: "1234",
      },
      rules: {
        Account: [{ validator: users, trigger: "change" }],
        Password: [{ validator: pwds, trigger: "change" }],
      },
    };
  },
  mounted() {
        this.denglu();
    },
  methods: {
     submitForm(formName) {
      this.$refs[formName].validate(async (valid) => {
        if (valid) {
          this.loads = "loading";
          // const res=await  post('/Api/FormHandler.ashx/IsLogin',this.ruleForm);
          // if(res.code==0&& res.result){
          //   console.log(res)
          //   sessionStorage.zyh='0823202105159233',
          //   sessionStorage.userName='黄秀兰'
          //   sessionStorage.user='0225'
          //   sessionStorage.keys=res.result.key;
          //   sessionStorage.value=res.result.value;
            this.$router.push({
              path: "/nursingBoard",////advancedTablenursingBoard//nuxreChangeShifts//feelUnhappy
              query: {
                user_id: 10255,
                bqdm:'0005',
                item:1,
                zyh:'1083202106116367'
              },
            });
          //}
        } else {
          this.$message.error("请输入用户名或密码");
          return false;
        }
      });
    },
    resetForm(formName) {
      this.$refs[formName].resetFields();
    },
    toogleType() {
      this.password == "password"
        ? (this.password = "text")
        : (this.password = "password");
    },
    async denglu(){//登录获取token
            var obj ={
            "account": "0299",
            "passWord": "1",
            "macAddress": "Duis culpa laboris"
            }
            const res = await post('/auth/authorization/loging', obj);
            sessionStorage.setItem("token", 'Bearer '+ res.result);
            console.log(res);

    },

  },
};
</script>
<style  scoped>
@import url("../../../static/css/Login.css");
</style>
